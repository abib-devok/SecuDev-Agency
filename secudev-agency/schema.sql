-- Create the contacts table
CREATE TABLE contacts (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  message TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
ALTER TABLE contacts ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public insert for contacts" ON contacts FOR INSERT WITH CHECK (true);

-- Create the blog_posts table
CREATE TABLE blog_posts (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  slug VARCHAR(255) UNIQUE NOT NULL,
  content TEXT NOT NULL,
  category VARCHAR(100),
  excerpt VARCHAR(500),
  meta_tags JSONB,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
ALTER TABLE blog_posts ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public read for blog posts" ON blog_posts FOR SELECT USING (true);
CREATE POLICY "Allow admin full access for blog posts" ON blog_posts FOR ALL USING (auth.role() = 'service_role') WITH CHECK (auth.role() = 'service_role');


-- Create the projects table
CREATE TABLE projects (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT NOT NULL,
  image_url VARCHAR(255),
  tech_stack TEXT[],
  tags TEXT[]
);
ALTER TABLE projects ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public read for projects" ON projects FOR SELECT USING (true);
CREATE POLICY "Allow admin full access for projects" ON projects FOR ALL USING (auth.role() = 'service_role') WITH CHECK (auth.role() = 'service_role');


-- Create the comments table
CREATE TABLE comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  post_id BIGINT REFERENCES blog_posts(id) ON DELETE CASCADE,
  author VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  approved BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
ALTER TABLE comments ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow public read for approved comments" ON comments FOR SELECT USING (approved = TRUE);
CREATE POLICY "Allow users to insert comments" ON comments FOR INSERT WITH CHECK (auth.role() = 'authenticated');
CREATE POLICY "Allow admin full access for comments" ON comments FOR ALL USING (auth.role() = 'service_role') WITH CHECK (auth.role() = 'service_role');

-- Seed initial blog posts
INSERT INTO blog_posts (title, slug, content, category, excerpt, meta_tags) VALUES
('Tendances sécurité web 2025', 'tendances-securite-web-2025', 'Contenu détaillé sur les menaces émergentes...', 'Sécurité', 'Un aperçu des défis de sécurité à venir.', '{"keywords": "sécurité, 2025, web"}'),
('Pourquoi Next.js est un choix sûr', 'pourquoi-nextjs-securite', 'Analyse des fonctionnalités de sécurité de Next.js...', 'Technologie', 'Découvrez comment Next.js protège vos applications.', '{"keywords": "Next.js, sécurité, framework"}'),
('Top 5 des failles OWASP à connaître', 'top-5-failles-owasp', 'Explication des failles de sécurité les plus communes...', 'OWASP', 'Protégez-vous contre les attaques les plus fréquentes.', '{"keywords": "OWASP, failles, sécurité"}'),
('Audit de sécurité : par où commencer ?', 'audit-securite-par-ou-commencer', 'Guide pratique pour réaliser votre premier audit de sécurité.', 'Audit', 'Les premières étapes cruciales pour sécuriser votre application.', '{"keywords": "audit, sécurité, guide"}'),
('Le chiffrement de bout en bout expliqué', 'chiffrement-bout-en-bout-explique', 'Démystification du chiffrement pour les développeurs.', 'Chiffrement', 'Comprendre les bases du chiffrement end-to-end.', '{"keywords": "chiffrement, E2EE, sécurité"}');

-- Seed initial projects
INSERT INTO projects (title, description, image_url, tech_stack, tags) VALUES
('App e-commerce sécurisée pour Client X', 'Développement d''une plateforme e-commerce avec un tunnel de paiement ultra-sécurisé.', 'https://images.unsplash.com/photo-1563013544-824ae1b704d3', '{"React", "Next.js", "Supabase", "Stripe"}', '{"Web", "Sécurité"}'),
('Application mobile Fintech pour Startup Y', 'Création d''une application mobile cross-platform pour la gestion de finances personnelles avec des normes de sécurité bancaire.', 'https://images.unsplash.com/photo-1601597111158-2f8e6b2b5be5', '{"Flutter", "Supabase", "Firebase"}', '{"Mobile", "Sécurité"}'),
('Plateforme de santé connectée pour Partenaire Z', 'Développement d''une application de suivi de santé respectant les normes RGPD et HDS (Hébergement de Données de Santé).', 'https://images.unsplash.com/photo-1581091226825-a6a2a5aee158', '{"React Native", "AWS", "PostgreSQL"}', '{"Mobile", "Santé"}');
